package com.rstech.wordwatch.dao;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RSSessionDAOExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    public RSSessionDAOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIDIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIDIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIDEqualTo(Long value) {
            addCriterion("ID =", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotEqualTo(Long value) {
            addCriterion("ID <>", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThan(Long value) {
            addCriterion("ID >", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThan(Long value) {
            addCriterion("ID <", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDIn(List<Long> values) {
            addCriterion("ID in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotIn(List<Long> values) {
            addCriterion("ID not in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andSTART_TIMESTAMPIsNull() {
            addCriterion("START_TIMESTAMP is null");
            return (Criteria) this;
        }

        public Criteria andSTART_TIMESTAMPIsNotNull() {
            addCriterion("START_TIMESTAMP is not null");
            return (Criteria) this;
        }

        public Criteria andSTART_TIMESTAMPEqualTo(Date value) {
            addCriterion("START_TIMESTAMP =", value, "START_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andSTART_TIMESTAMPNotEqualTo(Date value) {
            addCriterion("START_TIMESTAMP <>", value, "START_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andSTART_TIMESTAMPGreaterThan(Date value) {
            addCriterion("START_TIMESTAMP >", value, "START_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andSTART_TIMESTAMPGreaterThanOrEqualTo(Date value) {
            addCriterion("START_TIMESTAMP >=", value, "START_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andSTART_TIMESTAMPLessThan(Date value) {
            addCriterion("START_TIMESTAMP <", value, "START_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andSTART_TIMESTAMPLessThanOrEqualTo(Date value) {
            addCriterion("START_TIMESTAMP <=", value, "START_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andSTART_TIMESTAMPIn(List<Date> values) {
            addCriterion("START_TIMESTAMP in", values, "START_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andSTART_TIMESTAMPNotIn(List<Date> values) {
            addCriterion("START_TIMESTAMP not in", values, "START_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andSTART_TIMESTAMPBetween(Date value1, Date value2) {
            addCriterion("START_TIMESTAMP between", value1, value2, "START_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andSTART_TIMESTAMPNotBetween(Date value1, Date value2) {
            addCriterion("START_TIMESTAMP not between", value1, value2, "START_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andEND_TIMESTAMPIsNull() {
            addCriterion("END_TIMESTAMP is null");
            return (Criteria) this;
        }

        public Criteria andEND_TIMESTAMPIsNotNull() {
            addCriterion("END_TIMESTAMP is not null");
            return (Criteria) this;
        }

        public Criteria andEND_TIMESTAMPEqualTo(Date value) {
            addCriterion("END_TIMESTAMP =", value, "END_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andEND_TIMESTAMPNotEqualTo(Date value) {
            addCriterion("END_TIMESTAMP <>", value, "END_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andEND_TIMESTAMPGreaterThan(Date value) {
            addCriterion("END_TIMESTAMP >", value, "END_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andEND_TIMESTAMPGreaterThanOrEqualTo(Date value) {
            addCriterion("END_TIMESTAMP >=", value, "END_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andEND_TIMESTAMPLessThan(Date value) {
            addCriterion("END_TIMESTAMP <", value, "END_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andEND_TIMESTAMPLessThanOrEqualTo(Date value) {
            addCriterion("END_TIMESTAMP <=", value, "END_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andEND_TIMESTAMPIn(List<Date> values) {
            addCriterion("END_TIMESTAMP in", values, "END_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andEND_TIMESTAMPNotIn(List<Date> values) {
            addCriterion("END_TIMESTAMP not in", values, "END_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andEND_TIMESTAMPBetween(Date value1, Date value2) {
            addCriterion("END_TIMESTAMP between", value1, value2, "END_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andEND_TIMESTAMPNotBetween(Date value1, Date value2) {
            addCriterion("END_TIMESTAMP not between", value1, value2, "END_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andLOGINIsNull() {
            addCriterion("LOGIN is null");
            return (Criteria) this;
        }

        public Criteria andLOGINIsNotNull() {
            addCriterion("LOGIN is not null");
            return (Criteria) this;
        }

        public Criteria andLOGINEqualTo(String value) {
            addCriterion("LOGIN =", value, "LOGIN");
            return (Criteria) this;
        }

        public Criteria andLOGINNotEqualTo(String value) {
            addCriterion("LOGIN <>", value, "LOGIN");
            return (Criteria) this;
        }

        public Criteria andLOGINGreaterThan(String value) {
            addCriterion("LOGIN >", value, "LOGIN");
            return (Criteria) this;
        }

        public Criteria andLOGINGreaterThanOrEqualTo(String value) {
            addCriterion("LOGIN >=", value, "LOGIN");
            return (Criteria) this;
        }

        public Criteria andLOGINLessThan(String value) {
            addCriterion("LOGIN <", value, "LOGIN");
            return (Criteria) this;
        }

        public Criteria andLOGINLessThanOrEqualTo(String value) {
            addCriterion("LOGIN <=", value, "LOGIN");
            return (Criteria) this;
        }

        public Criteria andLOGINLike(String value) {
            addCriterion("LOGIN like", value, "LOGIN");
            return (Criteria) this;
        }

        public Criteria andLOGINNotLike(String value) {
            addCriterion("LOGIN not like", value, "LOGIN");
            return (Criteria) this;
        }

        public Criteria andLOGINIn(List<String> values) {
            addCriterion("LOGIN in", values, "LOGIN");
            return (Criteria) this;
        }

        public Criteria andLOGINNotIn(List<String> values) {
            addCriterion("LOGIN not in", values, "LOGIN");
            return (Criteria) this;
        }

        public Criteria andLOGINBetween(String value1, String value2) {
            addCriterion("LOGIN between", value1, value2, "LOGIN");
            return (Criteria) this;
        }

        public Criteria andLOGINNotBetween(String value1, String value2) {
            addCriterion("LOGIN not between", value1, value2, "LOGIN");
            return (Criteria) this;
        }

        public Criteria andVERSIONIsNull() {
            addCriterion("VERSION is null");
            return (Criteria) this;
        }

        public Criteria andVERSIONIsNotNull() {
            addCriterion("VERSION is not null");
            return (Criteria) this;
        }

        public Criteria andVERSIONEqualTo(Integer value) {
            addCriterion("VERSION =", value, "VERSION");
            return (Criteria) this;
        }

        public Criteria andVERSIONNotEqualTo(Integer value) {
            addCriterion("VERSION <>", value, "VERSION");
            return (Criteria) this;
        }

        public Criteria andVERSIONGreaterThan(Integer value) {
            addCriterion("VERSION >", value, "VERSION");
            return (Criteria) this;
        }

        public Criteria andVERSIONGreaterThanOrEqualTo(Integer value) {
            addCriterion("VERSION >=", value, "VERSION");
            return (Criteria) this;
        }

        public Criteria andVERSIONLessThan(Integer value) {
            addCriterion("VERSION <", value, "VERSION");
            return (Criteria) this;
        }

        public Criteria andVERSIONLessThanOrEqualTo(Integer value) {
            addCriterion("VERSION <=", value, "VERSION");
            return (Criteria) this;
        }

        public Criteria andVERSIONIn(List<Integer> values) {
            addCriterion("VERSION in", values, "VERSION");
            return (Criteria) this;
        }

        public Criteria andVERSIONNotIn(List<Integer> values) {
            addCriterion("VERSION not in", values, "VERSION");
            return (Criteria) this;
        }

        public Criteria andVERSIONBetween(Integer value1, Integer value2) {
            addCriterion("VERSION between", value1, value2, "VERSION");
            return (Criteria) this;
        }

        public Criteria andVERSIONNotBetween(Integer value1, Integer value2) {
            addCriterion("VERSION not between", value1, value2, "VERSION");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rs_session
     *
     * @mbggenerated do_not_delete_during_merge Mon Jul 04 20:46:26 EDT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rs_session
     *
     * @mbggenerated Mon Jul 04 20:46:26 EDT 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}